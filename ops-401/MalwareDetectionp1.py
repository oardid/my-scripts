#!/bin/usr/python3

# Script Name:                  ops401-challenge31
# Author:                       Omar Ardid
# Date of latest revision:      06/10/2024
# Purpose:                      Creating a basic antivirus tool in Python
# Resources:                    https://www.howtogeek.com/112674/how-to-find-files-and-folders-in-linux-using-the-command-line/

import os
import sys
import time

def animated_text(text):
    # Define a list of animation frames
    animation_frames = ["|", "/", "-", "\\"]
    
    # Repeat the animation 5 times
    for _ in range(3):
        # Loop through each frame and print the animated text on the same line
        for frame in animation_frames:
            print(f"\r{text} {frame}", end="", flush=True)  # Use carriage return to overwrite the same line
            time.sleep(0.1)  # Adjust the sleep time to control the speed of animation
    print()  # Move to the next line after printing the animated text

def search_file(file_name, search_directory):
    # Initialize counters
    hits = 0
    files_searched = 0

    # Traverse through the directory and search for files
    for root, dirs, files in os.walk(search_directory):
        for file in files:
            files_searched += 1
            if file_name in file:
                hits += 1
                print(f"Found: {file} at {os.path.join(root, file)}")
    
    # Print search summary
    print(f"\nSearch completed. {files_searched} files searched. {hits} hits found.")
    
    # Wait for user input before exiting
    input("Press Enter to exit.")

def main():
    # Check the operating system and display appropriate message
    if sys.platform.startswith('linux'):
        # Display animated text for Linux
        animated_text("Running on Linux...")
        # Prompt user for file name and directory
        file_name = input("Enter the file name to search for: ")
        search_directory = input("Enter the directory to search in: ")
        if not os.path.exists(search_directory):
            print("The specified directory does not exist.")
            return
    elif sys.platform.startswith('win32'):
        # Display animated text for Windows
        animated_text("Running on Windows...")
        # Prompt user for file name and directory
        file_name = input("Enter the file name to search for: ")
        search_directory = input("Enter the directory to search in: ")
        if not os.path.exists(search_directory):
            print("The specified directory does not exist.")
            return
    else:
        print("Unsupported operating system.")
        return

    # Call search_file function here to ensure it gets executed
    search_file(file_name, search_directory)

if __name__ == "__main__":
    main()
